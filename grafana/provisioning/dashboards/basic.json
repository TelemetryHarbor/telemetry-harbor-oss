{
    
    "__elements": {},
    "__requires": [
      {
        "type": "panel",
        "id": "barchart",
        "name": "Bar chart",
        "version": ""
      },
      {
        "type": "panel",
        "id": "geomap",
        "name": "Geomap",
        "version": ""
      },
      {
        "type": "grafana",
        "id": "grafana",
        "name": "Grafana",
        "version": "11.3.0+security-01"
      },
      {
        "type": "datasource",
        "id": "grafana-postgresql-datasource",
        "name": "PostgreSQL",
        "version": "1.0.0"
      },
      {
        "type": "panel",
        "id": "piechart",
        "name": "Pie chart",
        "version": ""
      },
      {
        "type": "panel",
        "id": "stat",
        "name": "Stat",
        "version": ""
      },
      {
        "type": "panel",
        "id": "table",
        "name": "Table",
        "version": ""
      },
      {
        "type": "panel",
        "id": "timeseries",
        "name": "Time series",
        "version": ""
      }
    ],
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": {
            "type": "grafana",
            "uid": "-- Grafana --"
          },
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "type": "dashboard"
        }
      ]
    },
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 0,
    "id": null,
    "links": [],
    "panels": [
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_POSTGRESQL}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 6,
        "x": 0,
        "y": 0
      },
      "id": 12,
      "options": {
        "minVizHeight": 75,
        "minVizWidth": 75,
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": false,
        "sizing": "auto"
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_POSTGRESQL}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT\n  COUNT(DISTINCT ship_id) as active_devices,\n  COUNT(DISTINCT cargo_id) as active_cargos,\n  COUNT(*) as total_readings\nFROM cargo_data\nWHERE $__timeFilter(time) AND ship_id IN (${ship_id:sqlstring})",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Telemetry Overview",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_POSTGRESQL}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic",
            "seriesBy": "last"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": [],
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 6,
        "x": 6,
        "y": 0
      },
      "id": 6,
      "options": {
        "displayLabels": [
          "percent"
        ],
        "legend": {
          "displayMode": "list",
          "placement": "right",
          "showLegend": true
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_POSTGRESQL}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT\n  cargo_id,\n  COUNT(*) as reading_count\nFROM cargo_data\nWHERE $__timeFilter(time) AND ship_id IN (${ship_id:sqlstring})\nGROUP BY cargo_id\nORDER BY reading_count DESC",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "${cargo_id} Type Distribution",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_POSTGRESQL}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 12,
        "x": 12,
        "y": 0
      },
      "id": 10,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": true,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_POSTGRESQL}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "WITH time_range AS (\n  SELECT $__timeFrom()::timestamp AS start_time, $__timeTo()::timestamp AS end_time\n),\nbucket_choice AS (\n  SELECT\n    CASE\n      WHEN end_time - start_time <= interval '1 hour' THEN interval '10 seconds'\n      WHEN end_time - start_time <= interval '6 hours' THEN interval '1 minute'\n      WHEN end_time - start_time <= interval '1 day' THEN interval '5 minutes'\n      WHEN end_time - start_time <= interval '7 days' THEN interval '30 minutes'\n      WHEN end_time - start_time <= interval '30 days' THEN interval '1 hour'\n      WHEN end_time - start_time <= interval '90 days' THEN interval '6 hours'\n      ELSE interval '1 day'\n    END AS bucket\n  FROM time_range\n)\nSELECT\n  time_bucket(\n    (SELECT bucket FROM bucket_choice),\n    time\n  ) AS bucket,\n  ship_id,\n  cargo_id,\n  AVG(value) AS value\nFROM cargo_data, time_range\nWHERE\n  time BETWEEN time_range.start_time AND time_range.end_time\n  AND ship_id IN (${ship_id:sqlstring})\n  AND cargo_id IN (${cargo_id:sqlstring})\nGROUP BY bucket, ship_id, cargo_id\nORDER BY bucket DESC;\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "${cargo_id} Live Readings",
      "transformations": [
        {
          "id": "prepareTimeSeries",
          "options": {
            "format": "multi"
          }
        },
        {
          "id": "renameByRegex",
          "options": {
            "regex": "value {cargo_id=\"([^\"]+)\", ship_id=\"([^\"]+)\"}",
            "renamePattern": "$1 - $2"
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_POSTGRESQL}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic-by-name"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "series",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 5
      },
      "id": 13,
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min",
            "last"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_POSTGRESQL}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "WITH time_range AS (\n  SELECT $__timeFrom()::timestamp AS start_time, $__timeTo()::timestamp AS end_time\n),\nbucket_choice AS (\n  SELECT\n    CASE\n      WHEN end_time - start_time <= interval '1 hour' THEN interval '10 seconds'\n      WHEN end_time - start_time <= interval '6 hours' THEN interval '1 minute'\n      WHEN end_time - start_time <= interval '1 day' THEN interval '5 minutes'\n      WHEN end_time - start_time <= interval '7 days' THEN interval '30 minutes'\n      WHEN end_time - start_time <= interval '30 days' THEN interval '1 hour'\n      WHEN end_time - start_time <= interval '90 days' THEN interval '6 hours'\n      ELSE interval '1 day'\n    END AS bucket\n  FROM time_range\n)\nSELECT\n  time_bucket(\n    (SELECT bucket FROM bucket_choice),\n    time\n  ) AS bucket,\n  ship_id,\n  cargo_id,\n  AVG(value) AS value\nFROM cargo_data, time_range\nWHERE\n  time BETWEEN time_range.start_time AND time_range.end_time\n  AND ship_id IN (${ship_id:sqlstring})\n  AND cargo_id IN (${cargo_id:sqlstring})\nGROUP BY bucket, ship_id, cargo_id\nORDER BY bucket DESC;\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "${cargo_id} Readings Over Time",
      "transformations": [
        {
          "id": "prepareTimeSeries",
          "options": {
            "format": "multi"
          }
        },
        {
          "id": "renameByRegex",
          "options": {
            "regex": "value {cargo_id=\"([^\"]+)\", ship_id=\"([^\"]+)\"}",
            "renamePattern": "$1 - $2"
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_POSTGRESQL}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "#73BF69",
            "mode": "palette-classic-by-name"
          },
          "custom": {
            "axisBorderShow": true,
            "axisCenteredZero": false,
            "axisColorMode": "series",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMax": 30,
            "axisSoftMin": 20,
            "fillOpacity": 20,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "fieldMinMax": false,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 5
      },
      "id": 11,
      "options": {
        "barRadius": 0,
        "barWidth": 1,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [
            "last"
          ],
          "displayMode": "table",
          "placement": "right",
          "showLegend": true
        },
        "orientation": "horizontal",
        "showValue": "auto",
        "stacking": "none",
        "text": {},
        "tooltip": {
          "mode": "single",
          "sort": "desc"
        },
        "xField": "ship_id",
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_POSTGRESQL}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT\n  ship_id,\n  cargo_id,\n  AVG(value) as avg_value,\n  MIN(value) as min_value,\n  MAX(value) as max_value\nFROM cargo_data\nWHERE $__timeFilter(time) AND ship_id IN (${ship_id:sqlstring}) AND cargo_id IN (${cargo_id:sqlstring})\nGROUP BY ship_id, cargo_id\nORDER BY ship_id, cargo_id",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "${cargo_id} Summary",
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_POSTGRESQL}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 13
      },
      "id": 8,
      "options": {
        "basemap": {
          "config": {
            "server": "streets"
          },
          "name": "Layer 0",
          "type": "esri-xyz"
        },
        "controls": {
          "mouseWheelZoom": true,
          "showAttribution": true,
          "showDebug": false,
          "showMeasure": false,
          "showScale": false,
          "showZoom": true
        },
        "layers": [
          {
            "config": {
              "blur": 15,
              "radius": 5,
              "weight": {
                "fixed": 1,
                "max": 1,
                "min": 0
              }
            },
            "name": "Devices",
            "opacity": 1,
            "tooltip": true,
            "type": "heatmap"
          }
        ],
        "tooltip": {
          "mode": "details"
        },
        "view": {
          "allLayers": true,
          "id": "fit",
          "lastOnly": false,
          "lat": 0,
          "layer": "Devices",
          "lon": 0,
          "zoom": 1
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_POSTGRESQL}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT\n    time,\n    MAX(value) FILTER (WHERE cargo_id = 'latitude') AS latitude,\n    MAX(value) FILTER (WHERE cargo_id = 'longitude') AS longitude,\n    ship_id\nFROM cargo_data\nWHERE $__timeFilter(time)\n  AND ship_id IN (${ship_id:sqlstring})\n  AND cargo_id IN ('latitude', 'longitude') -- Include only relevant data\nGROUP BY time, ship_id\nHAVING \n    COUNT(DISTINCT CASE WHEN cargo_id = 'latitude' THEN value END) > 0\n    AND COUNT(DISTINCT CASE WHEN cargo_id = 'longitude' THEN value END) > 0\nORDER BY time;\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Device Locations",
      "type": "geomap"
    }
  ],
    "refresh": "5s",
    "schemaVersion": 40,
    "tags": [],
    "templating": {
      "list": [
        {
          "current": {},
          "includeAll": false,
          "label": "Data Source",
          "name": "DS_POSTGRESQL",
          "options": [],
          "query": "postgres",
          "refresh": 1,
          "regex": "",
          "type": "datasource"
        },
        {
          "current": {},
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_POSTGRESQL}"
          },
          "definition": "SELECT DISTINCT ship_id FROM cargo_data",
          "includeAll": true,
          "label": "Ship / Device",
          "multi": true,
          "name": "ship_id",
          "options": [],
          "query": "SELECT DISTINCT ship_id FROM cargo_data",
          "refresh": 1,
          "regex": "",
          "sort": 1,
          "type": "query"
        },
        {
          "current": {},
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_POSTGRESQL}"
          },
          "definition": "SELECT DISTINCT cargo_id FROM cargo_data",
          "includeAll": true,
          "label": "Cargo / Event / Sensor",
          "multi": true,
          "name": "cargo_id",
          "options": [],
          "query": "SELECT DISTINCT cargo_id FROM cargo_data",
          "refresh": 1,
          "regex": "",
          "type": "query"
        }
      ]
    },
    "time": {
      "from": "now-15m",
      "to": "now"
    },
    "timepicker": {},
    "timezone": "browser",
    "title": "Comprehensive Telemetry Dashboard",
    "uid": "comprehensive-telemetry-001",
    "version": 26,
    "weekStart": ""
  }